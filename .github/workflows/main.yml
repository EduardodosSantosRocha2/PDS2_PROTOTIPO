name: Build and deploy

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U $POSTGRES_USER"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Instalar python
        uses: actions/setup-python@v2
        with:
<<<<<<< HEAD
          python-version: "3.12.5"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: instalar dependencias
        run: pip install -r ./backend/requirements.txt
      - name: Esperando o PostgreSQL ficar pronto
        run: sleep 15
      - name: Executar pytest
        env:
          DATABASE_URL: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}
        run: pytest ./backend/teste.py
=======
          python-version: "3.12"

      - name: Instalar dependÃªncias
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r ./BACKEND/requirements.txt

      - name: Criar arquivo .env
        run: |
          echo "user=${{ secrets.POSTGRES_USER }}" >> .env
          echo "password=${{ secrets.POSTGRES_PASSWORD }}" >> .env
      - name: Run tests
        run: |
          source .venv/bin/activate
          python -m pytest ./BACKEND/teste.py
>>>>>>> a3e4fb9f6047f90105c5d51f54a89b8888a82d4d
